import streamlit as st
import os
import re
from agent_corretor import executar_correcao_enem
import tempfile

# --- Fun√ß√µes de Apoio ---

def parse_and_display_correction(correction_text: str):
    """
    Analisa o texto de corre√ß√£o bruto e o exibe de forma estruturada no Streamlit.
    """
    st.header("Resultado da Corre√ß√£o")

    # 1. Extrair a Nota Total
    total_score_match = re.search(r"Nota da Reda√ß√£o:.*?(\d+)", correction_text)
    if total_score_match:
        total_score = total_score_match.group(1)
        st.metric(label="Nota Total da Reda√ß√£o", value=f"{total_score} / 1000")
    else:
        st.warning("N√£o foi poss√≠vel extrair a nota total.")

    st.markdown("---")

    # 2. Dividir a corre√ß√£o pelas compet√™ncias
    # Usamos uma express√£o regular para encontrar cada bloco de compet√™ncia
    competencias = re.split(r"\n(?=Compet√™ncia \d)", correction_text)
    
    # O primeiro elemento pode ser a nota total ou lixo, ent√£o o ignoramos se necess√°rio
    start_index = 1 if "Compet√™ncia 1" in competencias[1] else 0
    
    for i, comp_block in enumerate(competencias[start_index:], start=1):
        # Extrair o t√≠tulo da compet√™ncia
        title_match = re.search(r"Compet√™ncia \d.*", comp_block)
        title = title_match.group(0).strip() if title_match else f"Compet√™ncia {i}"

        # Extrair a nota da compet√™ncia
        score_match = re.search(r"Sua nota nessa compet√™ncia foi:.*?(\d+)", comp_block)
        score = score_match.group(1) if score_match else "N/A"

        # Extrair a an√°lise
        # A an√°lise √© o texto ap√≥s a linha da nota
        analysis_match = re.search(r"\*\*Sua nota nessa compet√™ncia foi:.*?\*\*\n(.*)", comp_block, re.DOTALL)
        analysis = analysis_match.group(1).strip() if analysis_match else "An√°lise n√£o encontrada."

        # 3. Exibir em um container
        with st.container(border=True):
            col1, col2 = st.columns([4, 1])
            with col1:
                st.subheader(title)
            with col2:
                st.metric(label="Nota", value=f"{score} / 200")
            
            st.markdown(analysis)


# --- Interface do Streamlit ---

st.set_page_config(page_title="Corretor de Reda√ß√£o ENEM", layout="wide")

st.title("ü§ñ Agente Corretor de Reda√ß√£o para o ENEM")
st.markdown("""
Envie a sua reda√ß√£o (em formato de texto, PDF ou imagem) e o tema proposto para receber uma an√°lise detalhada
baseada nas 5 compet√™ncias do ENEM.
""")

# --- Inputs do Usu√°rio ---
st.header("1. Insira o Tema da Reda√ß√£o")
tema_redacao = st.text_input("Tema:", placeholder="Digite o tema completo da reda√ß√£o aqui...")

st.header("2. Envie sua Reda√ß√£o")
uploaded_file = st.file_uploader(
    "Selecione o arquivo da sua reda√ß√£o (txt, pdf, png, jpg)",
    type=['txt', 'pdf', 'png', 'jpg', 'jpeg']
)

# --- Bot√£o de Corre√ß√£o e L√≥gica Principal ---
st.header("3. Iniciar Corre√ß√£o")
if st.button("Corrigir Minha Reda√ß√£o"):
    if uploaded_file is not None and tema_redacao:
        # Criar um arquivo tempor√°rio para salvar o upload
        with tempfile.NamedTemporaryFile(delete=False, suffix=os.path.splitext(uploaded_file.name)[1]) as tmp_file:
            tmp_file.write(uploaded_file.getvalue())
            caminho_arquivo_temporario = tmp_file.name

        try:
            with st.spinner("Aguarde, o agente est√° corrigindo sua reda√ß√£o... Isso pode levar um minuto."):
                # Chamar o agente para executar a corre√ß√£o
                resultado_correcao = executar_correcao_enem(caminho_arquivo_temporario, tema_redacao)

            # --- Exibi√ß√£o do Resultado ---
            parse_and_display_correction(resultado_correcao)

        except Exception as e:
            st.error(f"Ocorreu um erro durante a corre√ß√£o: {e}")
        finally:
            # Remover o arquivo tempor√°rio
            os.remove(caminho_arquivo_temporario)

    elif not tema_redacao:
        st.warning("Por favor, insira o tema da reda√ß√£o.")
    else:
        st.warning("Por favor, envie o arquivo da sua reda√ß√£o.")

# --- Rodap√© ---
st.markdown("---")
st.write("Desenvolvido com Streamlit e Google Gemini")
